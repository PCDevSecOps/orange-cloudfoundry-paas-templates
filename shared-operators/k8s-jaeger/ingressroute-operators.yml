- type: replace
  path: /variables?/-
  value:
    name: jaeger_admin_password
    type: password

- type: replace
  path: /instance_groups/name=k8s-helm-addons/jobs/name=action/properties/actions/-
  value:
    type: basic_auth_secret
    name: jaeger
    namespace: jaeger
    user: admin
    password: ((jaeger_admin_password))



- type: replace
  path: /instance_groups/name=k8s-helm-addons/jobs/name=action/properties/actions/-
  value:
    type: kubectl
    name: "jaegeringressrouteMiddleware"
    cmd: "apply"
    options: ""
    content:
      apiVersion: ((middleware_api_version))
      kind: Middleware
      metadata:
        name: auth
        namespace: jaeger
      spec:
        basicAuth:
          secret: jaeger


- type: replace
  path: /instance_groups/name=k8s-helm-addons/jobs/name=action/properties/actions/-
  value:
    type: kubectl
    name: "jaeger-ingressroute"
    cmd: "apply"
    options: ""
    content:
      apiVersion: ((ingressroute_api_version))
      kind: IngressRoute
      metadata:
        name: jaeger-ingressroute
        namespace: jaeger
        annotations:
          kubernetes.io/ingress.class: traefik
      spec:
        entryPoints:
        - web
        routes:
        - match: Host(`jaeger.((env_pf)).((/secrets/cloudfoundry_ops_domain))`) && PathPrefix(`/jaeger`)
          kind: Rule
          middlewares:
          - name: auth
            namespace: jaeger
          priority: 0
          services:
          - kind: Service
            name: my-jaeger-query
            namespace: jaeger
            port: 16686