#daemon set to save kubeconfig in credhub
- type: replace
  path: /addons/name=10-add-servers/jobs/name=action/properties/actions/-
  value:
    type: namespace
    name: credhub-kube-config-init


- type: replace
  path: /addons/name=10-add-servers/jobs/name=action/properties/actions/-
  value:
    type: kubectl
    name: "credhub-kube-config-init-config"
    cmd: "apply"
    content:
      apiVersion: v1
      kind: ConfigMap
      metadata:
        name: credhub-kube-config-init-config
        namespace: credhub-kube-config-init
        labels:
          app: credhub-kube-config-init-config
      data:
        entrypoint.sh: |
          #!/usr/bin/env bash
          echo "save kubeconfig in credhub"
          set -x debug
          set -e #fail on errors
          
          credhub login --client-name=director_to_credhub --client-secret=((/secrets/bosh_credhub_secrets)) -s https://credhub.internal.paas:8844
          
          KUBECONFIG=$(cat /kubeconfig.yml)
          
          #set credhub value
          credhub set -t value -n /kubeconfigs/((deployment_name)) -v "${KUBECONFIG}"
          
          echo "done saving kubeconfig in credhub"


- type: replace
  path: /addons/name=10-add-servers/jobs/name=action/properties/actions/-
  value:
    type: kubectl
    name: "credhub-kube-config-init-daemonset"
    cmd: "apply"
    content:
      apiVersion: apps/v1
      kind: DaemonSet
      metadata:
        name: credhub-kube-config-init-daemonset
        namespace: credhub-kube-config-init
        labels:
          app: credhub-kube-config-init-daemonset
      spec:
        selector:
          matchLabels:
            app: credhub-kube-config-init-daemonset
        updateStrategy:
          type: RollingUpdate
        template:
          metadata:
            labels:
              name: node-initializer
              app: credhub-kube-config-init-daemonset
          spec:
            #set toleration so this can run on master even if noscdule set
            tolerations:
            - effect: NoExecute
              operator: Exists
            - effect: NoSchedule
              operator: Exists
              
            volumes:
            - name: root-mount
              hostPath:
                path: /

            #mount kubeconfig from bosh k3s master host
            - name: kubeconfig
              hostPath:
                path: /var/vcap/store/k3s-server/kubeconfig.yml
                type: File

            #mount script from configmap
            - name: entrypoint
              configMap:
                name: credhub-kube-config-init-config
                defaultMode: 0744
                
            #mount host ca cert (including /internalCA required by credhub cli)
            - name: cert-volume
              hostPath:
                path: /etc/ssl/certs
                type: Directory

            #only master nodes have k3s generated kubeconfig
            nodeSelector:
              node-role.kubernetes.io/control-plane: "true"

            initContainers:
            - image: pcfseceng/credhub-ci:ubuntu-20.04
              name: node-initializer
              command: ["/scripts/entrypoint.sh"]
              volumeMounts:
              - name: root-mount
                mountPath: /root
              - name: entrypoint
                mountPath: /scripts
              - name: kubeconfig
                mountPath: /kubeconfig.yml
                readOnly: true
              - name: cert-volume
                mountPath: /etc/ssl/certs

            #fake permanent container to keep DaemonSet
            containers:
            - image: "rancher/pause:3.1"
              name: pause
