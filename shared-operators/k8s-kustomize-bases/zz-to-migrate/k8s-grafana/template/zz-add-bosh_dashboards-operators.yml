- type: replace
  path: /instance_groups/name=k8s-helm-addons/jobs/-
  value:
    name: bosh_dashboards
    release: prometheus

- type: replace
  path: /instance_groups/name=k8s-helm-addons/jobs/-
  value:
    name: concourse_dashboards
    release: prometheus

- type: replace
  path: /instance_groups/name=k8s-helm-addons/jobs/-
  value:
    name: elasticsearch_dashboards
    release: prometheus

- type: replace
  path: /instance_groups/name=k8s-helm-addons/jobs/-
  value:
    name: cloudfoundry_dashboards
    release: prometheus

- type: replace
  path: /instance_groups/name=k8s-helm-addons/jobs/-
  value:
    name: grafana_dashboards
    release: prometheus

- type: replace
  path: /instance_groups/name=k8s-helm-addons/jobs/-
  value:
    name: haproxy_dashboards
    release: prometheus

- type: replace
  path: /instance_groups/name=k8s-helm-addons/jobs/-
  value:
    name: kubernetes_dashboards
    release: prometheus

- type: replace
  path: /instance_groups/name=k8s-helm-addons/jobs/-
  value:
    name: postgres_dashboards
    release: prometheus

- type: replace
  path: /instance_groups/name=k8s-helm-addons/jobs/-
  value:
    name: probe_dashboards
    release: prometheus

- type: replace
  path: /instance_groups/name=k8s-helm-addons/jobs/-
  value:
    name: prometheus_dashboards
    release: prometheus

- type: replace
  path: /instance_groups/name=k8s-helm-addons/jobs/-
  value:
    name: system_dashboards
    release: prometheus

- type: replace
  path: /instance_groups/name=k8s-helm-addons/jobs/-
  value:
    name: credhub_dashboards
    release: prometheus

- type: replace
  path: /instance_groups/name=k8s-helm-addons/jobs/name=action/properties/actions/-
  value:
    type: exec
    cmd: |
      for product in bosh cloudfoundry concourse elasticsearch grafana haproxy kubernetes postgres probe prometheus system credhub; do \
      export dashboard_dir=/var/vcap/jobs/${product}_dashboards; \
      export dashboard_cm=${product}; \
      rm  /tmp/${dashboard_cm}; \
      mkdir -p /tmp/${dashboard_cm}; \
      cd ${dashboard_dir}; \
      for i in $(ls *.json); \
       do sed  's/${DS_PROMETHEUS}/prometheus/' ${dashboard_dir}/${i} > /tmp/${dashboard_cm}/${i}; \
      done; \
      kubectl delete --ignore-not-found=true configmap -n grafana ${dashboard_cm}; \
      kubectl create configmap -n grafana ${dashboard_cm} --from-file=/tmp/${dashboard_cm}; \
      kubectl annotate cm -n grafana ${dashboard_cm} folderAnnotation=/tmp/dashboards/${dashboard_cm}; \
      kubectl label cm -n grafana ${dashboard_cm} grafana_dashboard=1; \
      done;




