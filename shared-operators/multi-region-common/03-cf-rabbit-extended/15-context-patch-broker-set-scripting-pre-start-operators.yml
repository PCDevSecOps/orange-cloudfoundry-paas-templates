#--- configure host with alias on broker
- type: replace
  path: /instance_groups/name=broker/jobs/name=scripting/properties/scripting/pre-start-script
  value: |

    #--- Initialize context
    echo "- Start pre-start"
    > /var/vcap/sys/log/scripting/pre-start.stderr.log
    > /var/vcap/sys/log/scripting/pre-start.stdout.log

    set +e #curl will fail so we don't exit on error

    #wait for bosh-dns startup (45s max)
    counter=$(ps -aux | grep "bosh-dns" | wc -l)
    retry_counter=0
    while [ ${retry_counter} -lt 15 ]; do
        echo "waiting"
        sleep 3
        retry_counter=$[${retry_counter} + 1]
        counter=$(ps -aux | grep "bosh-dns" | wc -l)
    done
    if [ ${counter} -eq 4 ]; then
        echo "curling"
        curl -vs q-s0-a1.haproxy.tf-net-osb-data-plane-dedicated-pub.((deployment-name)).bosh -m 5 > curl.txt 2>&1 #z1
        curl -vs q-s0-a4.haproxy.tf-net-osb-data-plane-dedicated-pub.((deployment-name)).bosh -m 5 > curl_remote.txt 2>&1 #r2-z1
    else
        echo "timeout waiting for bosh-dns... exit"
        exit 1
    fi

    #get local ip from dns
    local_ip=$(grep "Trying" curl.txt | grep -oE '[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}')
    echo "local is ${local_ip}"

    #get remote ip from dns
    remote_ip=$(grep "Trying" curl_remote.txt | grep -oE '[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}')
    echo "remote ip is ${remote_ip}"

    #first, substitute local ip in broker configuration file
    BROKER_CONFIG_FILE=/var/vcap/jobs/rabbitmq-service-broker/config/rabbitmq_service_broker.yml
    if [[ -n "${local_ip}" ]]; then
      cat ${BROKER_CONFIG_FILE}
      sed -i "/- 192.168.[0-9]*.[0-9]*/{s//- ${local_ip}/;:p;n;bp}" ${BROKER_CONFIG_FILE} #only first occurence
      cat ${BROKER_CONFIG_FILE}
    else
      echo "local ip is empty... exit"
      exit 1
    fi

    #second, substitute remote ip in broker configuration file
    if [[ -n "${remote_ip}" ]]; then
      cat ${BROKER_CONFIG_FILE}
      sed -i "/- 192.168.[0-9]*.[0-9]*/{s//- ${remote_ip}/;:p;n;bp}" ${BROKER_CONFIG_FILE} #only first occurence
      cat ${BROKER_CONFIG_FILE}
    else
      echo "remote ip is empty... exit"
      exit 1
    fi

    #-------------------------------------
    #--- Use sqlite cli in order to purge old tasks (greater than 10 days i.e 864000 seconds)
    #-------------------------------------
    echo "- Start old tasks purge"
    cp /var/vcap/store/shield/shield.db /var/vcap/store/shield/shield.db.backup #keep a copy before purge and shrink
    chown vcap:vcap /var/vcap/store/shield/shield.db.backup
    /var/vcap/packages/sqlite3/bin/sqlite3 /var/vcap/store/shield/shield.db <<END_SQL
    DELETE FROM tasks WHERE strftime('%s','now') - requested_at > 864000;
    END_SQL
    /var/vcap/packages/sqlite3/bin/sqlite3 /var/vcap/store/shield/shield.db 'VACUUM;'  #shrink database in order to save space
    echo "- Old tasks purge done"

    #-------------------------------------
    #--- Generate additional server config for nginx in order to serve metrics
    #-------------------------------------
    echo "- Start config generation "

    cat <<EOF > /var/vcap/jobs/core/config/addon
    #metrics#
        server {
          listen       9091;
          server_name  metrics;
          location / {
              root   /tmp;
              index  metrics;
              add_header Content-Type text/plain;
              autoindex on;
          }
        }
    }
    EOF

    #test if addon already presents in /var/vcap/jobs/core/config/nginx.conf
    addon=$(cat /var/vcap/jobs/core/config/nginx.conf | grep '#metrics#' | wc -l)
    if [ "${addon}" -eq 0 ]; then
    #addon is not present so concat at the end
    length=$(cat /var/vcap/jobs/core/config/nginx.conf | wc -l)
    size=$(expr ${length} - 1)
    head -${size} /var/vcap/jobs/core/config/nginx.conf > /var/vcap/jobs/core/config/nginx.conf.tmp
    mv /var/vcap/jobs/core/config/nginx.conf.tmp /var/vcap/jobs/core/config/nginx.conf
    elif [ "${addon}" -eq 1 ]; then
    #addon is already present so clean and afterwards concat at the end
    line_counter=13
    head -n -${line_counter} /var/vcap/jobs/core/config/nginx.conf > /var/vcap/jobs/core/config/nginx.conf.tmp
    mv /var/vcap/jobs/core/config/nginx.conf.tmp /var/vcap/jobs/core/config/nginx.conf
    else
    echo "unexpected case"
    exit 1
    fi

    cat /var/vcap/jobs/core/config/addon >> /var/vcap/jobs/core/config/nginx.conf
    chown root:vcap /var/vcap/jobs/core/config/nginx.conf
    echo "- End config generation "
