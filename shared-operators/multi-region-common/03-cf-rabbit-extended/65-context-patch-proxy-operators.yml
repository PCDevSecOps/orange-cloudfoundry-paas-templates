---
- type: replace
  path: /instance_groups/name=haproxy/jobs/name=route_registrar?/properties/nats
  value: ((nats_ops))

- type: replace
  path: /instance_groups/name=haproxy/jobs/name=route_registrar?/properties/route_registrar/routes/0
  value:
      name: cf-rabbit-extended-coab
      port: 15672
      registration_interval: 20s
      uris:
        - ((rabbitmq-management-hostname))-((deployment_name)).((ops-domain))

#--- Load os-conf release
- type: replace
  path: /releases/name=os-conf?
  value:
    name: os-conf
    version: latest

#--- Set system flag in order to allow traffic incoming on eth0 (public ip) and outcoming on eth1 (private ip)
- type: replace
  path: /instance_groups/name=haproxy/jobs/-
  value:
    release: os-conf
    name: sysctl
    properties:
      sysctl:
        - net.ipv4.conf.all.rp_filter=2 #https://access.redhat.com/solutions/53031


#--- Set static routing in order to join proxy by using its public ip (eth0)
- type: replace
  path: /instance_groups/name=haproxy/jobs/name=scripting?
  value:
    name: scripting
    properties:
      scripting:
        pre-start-script: |
          echo "pre-start !!"

        post-start-script: |
          #--- Skip errors and initialize logs
          set +e
          > /var/vcap/sys/log/scripting/post-start.stderr.log
          > /var/vcap/sys/log/scripting/post-start.stdout.log

          GATEWAYS="((osb_dedicated_gateway_r1_ip))|((osb_dedicated_gateway_r2_ip))|((osb_dedicated_gateway_extension_r1_ip))|((osb_dedicated_gateway_extension_r2_ip))"
          CHECK_EXISTS="$(ip route list | grep "10.0.0.0")"
          if [ "${CHECK_EXISTS}" = "" ] ; then
            added=0
            for gateway in $(echo ${GATEWAYS} | tr "|" " "); do
              sudo route add -net 10.0.0.0 netmask 255.0.0.0 gw ${gateway}
              if [ $? = 0 ] ; then
                echo "- $(date): Add route to 10.0.0.0/8 via ${gateway} succeeded."
                added=1
              else
                echo "- $(date): Add route to 10.0.0.0/8 via ${gateway} failed."
              fi
            done
            if [ ${added} = 0 ] ; then
              echo "- $(date): No gateway added" ; exit 1
            fi
          fi #end existence check

        post-stop-script: |
          #--- Skip errors and initialize logs
          set +e
          > /var/vcap/sys/log/scripting/post-stop.stderr.log
          > /var/vcap/sys/log/scripting/post-stop.stdout.log

          GATEWAYS="((osb_dedicated_gateway_r1_ip))|((osb_dedicated_gateway_r2_ip))|((osb_dedicated_gateway_extension_r1_ip))|((osb_dedicated_gateway_extension_r2_ip))"
          CHECK_EXISTS="$(ip route list | grep "10.0.0.0")"
          if [ "${CHECK_EXISTS}" != "" ] ; then
            deleted=0
            for gateway in $(echo ${GATEWAYS} | tr "|" " "); do
              sudo route del -net 10.0.0.0 netmask 255.0.0.0 gw ${gateway}
              if [ $? = 0 ] ; then
                echo "- $(date): Delete route to 10.0.0.0/8 via ${gateway} succeeded."
                deleted=1
              else
                echo "- $(date): Delete route to 10.0.0.0/8 via ${gateway} failed."
              fi
            done
            if [ ${deleted} = 0 ] ; then
              echo "- $(date): No gateway deleted" ; exit 1
            fi
          fi #end existence check

        post-deploy-script: |
          echo "post-deploy !!"

    release: generic-scripting

- type: replace
  path: /instance_groups/name=haproxy/networks/0
  value:
    name: ((public_network))

- type: replace
  path: /instance_groups/name=haproxy/networks/-
  value:
    name: ((private_network))
    default: [dns,gateway]