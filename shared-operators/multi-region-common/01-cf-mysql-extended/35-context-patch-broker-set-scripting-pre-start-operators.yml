- type: replace
  path: /instance_groups/name=smoke-tests-vm/jobs/name=smoke-tests/properties/cf_mysql/smoke_tests/db_password?
  value: ((cf_mysql_smoke_tests_db_password))

#--- configure host with alias on broker
- type: replace
  path: /instance_groups/name=broker/jobs/name=cf-mysql-broker/properties/cf_mysql/host?
  value: ((deployment_name))_proxy.internal.paas

- type: replace
  path: /instance_groups/name=broker/jobs/name=scripting/properties/scripting/pre-start-script
  value: |

    #--- Initialize context
    echo "- Start pre-start"
    > /var/vcap/sys/log/scripting/pre-start.stderr.log
    > /var/vcap/sys/log/scripting/pre-start.stdout.log

    set +e #curl will fail so we don't exit on error

    #wait for bosh-dns startup (45s max)
    counter=$(ps -aux | grep "bosh-dns" | wc -l)
    retry_counter=0
    while [ ${retry_counter} -lt 15 ]; do
        echo "waiting"
        sleep 3
        retry_counter=$[${retry_counter} + 1]
        counter=$(ps -aux | grep "bosh-dns" | wc -l)
    done
    if [ ${counter} -eq 4 ]; then
        echo "curling"
        curl -vs ((deployment_name))_proxy.internal.paas -m 5 > curl.txt 2>&1
    else
        echo "timeout waiting for bosh-dns... exit"
        exit 1
    fi

    #get ip from dns
    ips=$(grep "Trying" curl.txt | grep -oE '[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}')
    for i in ${ips}; do
      echo "${i} treatment"
      nc -w 5 -vz ${i} 3306
      if [ $? = 0 ] ; then
        ip=${i}
        echo "${ip} selected"
      fi
    done

    #replace in configuration files with DNS alias matching ip selected
    if [[ -n "${ip}" ]]; then
      indexes="0|1"
      found=0
      for index in $(echo ${indexes} | tr "|" " "); do
        record=$(nslookup ((instance_id))-${index}.((/secrets/multi_region_region_1_rfc2136_zone_backend_services)) | grep ${ip} | wc -l)
        #select dns entry and use it for replacement
        if [ "${record}" -eq 1 ]; then
          echo "((instance_id))-${index}.((/secrets/multi_region_region_1_rfc2136_zone_backend_services)) used for replacement"
          DATABASE_CONFIG_FILE=/var/vcap/jobs/cf-mysql-broker/config/database.yml
          cat ${DATABASE_CONFIG_FILE}
          sed -i -e "s/((deployment_name))_proxy.internal.paas/((instance_id))-${index}.((/secrets/multi_region_region_1_rfc2136_zone_backend_services))/g" ${DATABASE_CONFIG_FILE}
          cat ${DATABASE_CONFIG_FILE}

          QUOTA_ENFORCER_CONFIG_FILE=/var/vcap/jobs/cf-mysql-broker/config/quota_enforcer_config.yml
          cat ${QUOTA_ENFORCER_CONFIG_FILE}
          sed -i -e "s/((deployment_name))_proxy.internal.paas/((instance_id))-${index}.((/secrets/multi_region_region_1_rfc2136_zone_backend_services))/g" ${QUOTA_ENFORCER_CONFIG_FILE}
          cat ${QUOTA_ENFORCER_CONFIG_FILE}
          found=1
        fi
      done

      if [ "${found}" -eq 0 ]; then
        echo "no dns entry found... exit"
        exit 1
      fi
    else
      echo "ip is empty... exit"
      exit 1
    fi

    #-------------------------------------
    #--- Use sqlite cli in order to purge old tasks (greater than 10 days i.e 864000 seconds)
    #-------------------------------------
    echo "- Start old tasks purge"
    cp /var/vcap/store/shield/shield.db /var/vcap/store/shield/shield.db.backup #keep a copy before purge and shrink
    chown vcap:vcap /var/vcap/store/shield/shield.db.backup
    /var/vcap/packages/sqlite3/bin/sqlite3 /var/vcap/store/shield/shield.db <<END_SQL
    DELETE FROM tasks WHERE strftime('%s','now') - requested_at > 864000;
    END_SQL
    /var/vcap/packages/sqlite3/bin/sqlite3 /var/vcap/store/shield/shield.db 'VACUUM;'  #shrink database in order to save space
    echo "- Old tasks purge done"

    #-------------------------------------
    #--- Generate additional server config for nginx in order to serve metrics
    #-------------------------------------
    echo "- Start config generation "

    cat <<EOF > /var/vcap/jobs/core/config/addon
    #metrics#
        server {
          listen       9091;
          server_name  metrics;
          location / {
              root   /tmp;
              index  metrics;
              add_header Content-Type text/plain;
              autoindex on;
          }
        }
    }
    EOF

    #test if addon already presents in /var/vcap/jobs/core/config/nginx.conf
    addon=$(cat /var/vcap/jobs/core/config/nginx.conf | grep '#metrics#' | wc -l)
    if [ "${addon}" -eq 0 ]; then
    #addon is not present so concat at the end
    length=$(cat /var/vcap/jobs/core/config/nginx.conf | wc -l)
    size=$(expr ${length} - 1)
    head -${size} /var/vcap/jobs/core/config/nginx.conf > /var/vcap/jobs/core/config/nginx.conf.tmp
    mv /var/vcap/jobs/core/config/nginx.conf.tmp /var/vcap/jobs/core/config/nginx.conf
    elif [ "${addon}" -eq 1 ]; then
    #addon is already present so clean and afterwards concat at the end
    line_counter=13
    head -n -${line_counter} /var/vcap/jobs/core/config/nginx.conf > /var/vcap/jobs/core/config/nginx.conf.tmp
    mv /var/vcap/jobs/core/config/nginx.conf.tmp /var/vcap/jobs/core/config/nginx.conf
    else
    echo "unexpected case"
    exit 1
    fi

    cat /var/vcap/jobs/core/config/addon >> /var/vcap/jobs/core/config/nginx.conf
    chown root:vcap /var/vcap/jobs/core/config/nginx.conf
    echo "- End config generation "

