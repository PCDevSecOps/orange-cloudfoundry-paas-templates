# Based on https://github.com/kubernetes/kubernetes/blob/master/CHANGELOG/CHANGELOG-1.16.md
# Based on https://github.com/kubernetes/kubernetes/blob/master/CHANGELOG/CHANGELOG-1.19.md

- type: replace
  path: /instance_groups/name=k8s-helm-addons/jobs/name=action/properties/actions/-
  value:
    type: kubectl
    name: "define-k8s19"
    cmd: "apply"
    options: ""
    content:
      apiVersion: templates.gatekeeper.sh/v1beta1
      kind: ConstraintTemplate
      metadata:
        name: k8s19

      spec:
        crd:
          spec:
            names:
              kind: k8s19
        targets:
        - target: admission.k8s.gatekeeper.sh
          rego: |
            package main

            violation[{"msg": msg, "details": {}}] {
              input.review.object.apiVersion == "v1"
              input.review.object.kind == "List"
              obj := input.review.object.items[_]
              msg := _warn with input as obj
            }

            violation[{"msg": msg, "details": {}}] {
              input.review.object.apiVersion != "v1"
              input.review.object.kind != "List"
              obj := input.review.object;
              msg := _warn with input as obj
            }



            # The apiextensions.k8s.io/v1beta1 version of CustomResourceDefinition is deprecated in 1.19. Migrate to use apiextensions.k8s.io/v1 instead
            _warn = msg {
              input.apiVersion == "apiextensions.k8s.io/v1beta1"
              input.kind == "CustomResourceDefinition"
             msg := sprintf("%s/%s: API apiextensions.k8s.io/v1beta1 for CustomResourceDefinition is deprecated in 1.19, use apiextensions.k8s.io/v1 instead.", [input.kind, input.metadata.name])
            }

            # The apiregistration.k8s.io/v1beta1 version is deprecated in 1.19. Migrate to use apiregistration.k8s.io/v1 instead
            _warn = msg {
              input.apiVersion == "apiregistration.k8s.io/v1beta1"
              msg := sprintf("%s/%s: API apiregistration.k8s.io/v1beta1 is deprecated in Kubernetes 1.19, use apiregistration.k8s.io/v1 instead.", [input.kind, input.metadata.name])
            }

            # The authentication.k8s.io/v1beta1 version is deprecated in 1.19. Migrate to use authentication.k8s.io/v1 instead
            _warn = msg {
              input.apiVersion == "authentication.k8s.io/v1beta1"
              msg := sprintf("%s/%s: API authentication.k8s.io/v1beta1 is deprecated in Kubernetes 1.19, use authentication.k8s.io/v1 instead.", [input.kind, input.metadata.name])
            }

            # The authorization.k8s.io/v1beta1 version is deprecated in 1.19. Migrate to use authorization.k8s.io/v1 instead
            _warn = msg {
              input.apiVersion == "authorization.k8s.io/v1beta1"
              msg := sprintf("%s/%s: API authorization.k8s.io/v1beta1 is deprecated in Kubernetes 1.19, use authorization.k8s.io/v1 instead.", [input.kind, input.metadata.name])
            }

            # The autoscaling/v2beta1 version is deprecated in 1.19. Migrate to use autoscaling/v2beta2 instead
            _warn = msg {
              input.apiVersion == "autoscaling/v2beta1"
              msg := sprintf("%s/%s: API autoscaling/v2beta1 is deprecated in Kubernetes 1.19, use autoscaling/v2beta2 instead.", [input.kind, input.metadata.name])
            }

            # The coordination.k8s.io/v1beta1 version is deprecated in 1.19. Migrate to use coordination.k8s.io/v1 instead
            _warn = msg {
              input.apiVersion == "coordination.k8s.io/v1beta1"
              msg := sprintf("%s/%s: API coordination.k8s.io/v1beta1 is deprecated in Kubernetes 1.19, use coordination.k8s.io/v1 instead.", [input.kind, input.metadata.name])
            }

            # The storage.k8s.io/v1beta1 version is deprecated in 1.19. Migrate to use storage.k8s.io/v1 instead
            _warn = msg {
              input.apiVersion == "storage.k8s.io/v1beta1"
              msg := sprintf("%s/%s: API storage.k8s.io/v1beta1 is deprecated in Kubernetes 1.19, use storage.k8s.io/v1 instead.", [input.kind, input.metadata.name])
            }

- type: replace
  path: /instance_groups/name=k8s-helm-addons/jobs/name=action/properties/actions/-
  value:
    type: kubectl
    name: "define-compliant-1-19"
    cmd: "apply"
    options: ""
    content:
      apiVersion: constraints.gatekeeper.sh/v1beta1
      kind: k8s19
      metadata:
        name: compliant-1-19
      spec:
        enforcementAction: dryrun
        match:
          kinds:
          - apiGroups:
            - '*'
            kinds:
            - '*'
