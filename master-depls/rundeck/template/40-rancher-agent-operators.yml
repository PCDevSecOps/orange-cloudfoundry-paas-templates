#recrafted ops file to provision rancher agent. Vars are generated by rancher-ui when adding "Existing Cluster"
- type: replace
  path: /addons/name=10-add-servers/jobs/name=action/properties/actions/-
  value:
    type: kubectl
    name: "proxy-clusterrole-kubeapiserver"
    cmd: "apply"
    content:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRole
      metadata:
        name: proxy-clusterrole-kubeapiserver
      rules:
      - apiGroups: [""]
        resources:
        - nodes/metrics
        - nodes/proxy
        - nodes/stats
        - nodes/log
        - nodes/spec
        verbs: ["get", "list", "watch", "create"]

- type: replace
  path: /addons/name=10-add-servers/jobs/name=action/properties/actions/-
  value:
    type: kubectl
    name: "proxy-role-binding-kubernetes-master"
    cmd: "apply"
    content:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      metadata:
        name: proxy-role-binding-kubernetes-master
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: ClusterRole
        name: proxy-clusterrole-kubeapiserver
      subjects:
      - apiGroup: rbac.authorization.k8s.io
        kind: User
        name: kube-apiserver
- type: replace
  path: /addons/name=10-add-servers/jobs/name=action/properties/actions/-
  value:
    type: kubectl
    name: "cattle-system"
    cmd: "apply"
    content:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: cattle-system

- type: replace
  path: /addons/name=10-add-servers/jobs/name=action/properties/actions/-
  value:
    type: kubectl
    name: "cattle"
    cmd: "apply"
    content:

      apiVersion: v1
      kind: ServiceAccount
      metadata:
        name: cattle
        namespace: cattle-system

- type: replace
  path: /addons/name=10-add-servers/jobs/name=action/properties/actions/-
  value:
    type: kubectl
    name: "cattle-admin-binding"
    cmd: "apply"
    content:

      apiVersion: rbac.authorization.k8s.io/v1beta1
      kind: ClusterRoleBinding
      metadata:
        name: cattle-admin-binding
        namespace: cattle-system
        labels:
          cattle.io/creator: "norman"
      subjects:
      - kind: ServiceAccount
        name: cattle
        namespace: cattle-system
      roleRef:
        kind: ClusterRole
        name: cattle-admin
        apiGroup: rbac.authorization.k8s.io

- type: replace
  path: /addons/name=10-add-servers/jobs/name=action/properties/actions/-
  value:
    type: kubectl
    name: "cattle-credentials-((rancher-agent-id))"
    cmd: "apply"
    content:
      apiVersion: v1
      kind: Secret
      metadata:
        name: cattle-credentials-((rancher-agent-id))
        namespace: cattle-system
      type: Opaque
      data:
        url: ((rancher_agent_url))
        token: ((rancher_agent_token))
        namespace: ""

- type: replace
  path: /addons/name=10-add-servers/jobs/name=action/properties/actions/-
  value:
    type: kubectl
    name: "cattle-admin"
    cmd: "apply"
    content:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRole
      metadata:
        name: cattle-admin
        labels:
          cattle.io/creator: "norman"
      rules:
      - apiGroups:
        - '*'
        resources:
        - '*'
        verbs:
        - '*'
      - nonResourceURLs:
        - '*'
        verbs:
        - '*'

- type: replace
  path: /addons/name=10-add-servers/jobs/name=action/properties/actions/-
  value:
    type: kubectl
    name: "cattle-cluster-agent"
    cmd: "apply"
    content:
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: cattle-cluster-agent
        namespace: cattle-system
      spec:
        selector:
          matchLabels:
            app: cattle-cluster-agent
        template:
          metadata:
            labels:
              app: cattle-cluster-agent
          spec:
            affinity:
              nodeAffinity:
                requiredDuringSchedulingIgnoredDuringExecution:
                  nodeSelectorTerms:
                    - matchExpressions:
                      - key: beta.kubernetes.io/os
                        operator: NotIn
                        values:
                          - windows
                preferredDuringSchedulingIgnoredDuringExecution:
                - weight: 100
                  preference:
                    matchExpressions:
                    - key: node-role.kubernetes.io/controlplane
                      operator: In
                      values:
                      - "true"
                - weight: 1
                  preference:
                    matchExpressions:
                    - key: node-role.kubernetes.io/etcd
                      operator: In
                      values:
                      - "true"
            serviceAccountName: cattle
            tolerations:
            - operator: Exists
            containers:
              - name: cluster-register
                imagePullPolicy: IfNotPresent
                env:
                - name: CATTLE_FEATURES
                  value: ""
                - name: CATTLE_IS_RKE
                  value: "false"
                - name: CATTLE_SERVER
                  value: "https://rancher-micro.((/secrets/cloudfoundry_ops_domain))"
                - name: CATTLE_CA_CHECKSUM
                  value: ""
                - name: CATTLE_CLUSTER
                  value: "true"
                - name: CATTLE_K8S_MANAGED
                  value: "true"
                image: rancher/rancher-agent:v2.5.2
                volumeMounts:
                - name: cattle-credentials
                  mountPath: /cattle-credentials
                  readOnly: true
                readinessProbe:
                  initialDelaySeconds: 2
                  periodSeconds: 5
                  httpGet:
                    path: /health
                    port: 8080
            volumes:
            - name: cattle-credentials
              secret:
                secretName: cattle-credentials-((rancher-agent-id))
                defaultMode: 320
