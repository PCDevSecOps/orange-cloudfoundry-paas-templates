#openstack exporter, as a docker container
- type: replace
  path: /instance_groups/name=bosh/jobs/name=scripting/properties/scripting/pre-start-script?
  value: |
    #!/bin/sh
    #--- Initialize logs
    > /var/vcap/sys/log/scripting/pre-start.stderr.log
    > /var/vcap/sys/log/scripting/pre-start.stdout.log

    #--- Add config.json
    echo "- Prepare openstack api config file."
    cat - > /var/vcap/data/scripting/clouds.yaml <<EOF
    clouds:
     r3-openstack-cloud:
       region_name: ((region))
       identity_api_version: 3
       identity_interface: internal
       auth:
         username: ((openstack_username))
         password: ((openstack_password))
         project_name: ((openstack_project))
         project_domain_name: ((openstack_domain))
         user_domain_name: ((openstack_domain))
         auth_url: ((auth_url))
         cacert: ""
         verify: true #true | false  // disable || enable SSL certificate verification
    EOF

    #--- Set bosh-exporter and nats-exporter (duplicate with template: https://github.com/orange-cloudfoundry/generic-scripting-release/issues/5)
    if [ ! -d /var/vcap/store/bosh_exporter ] ; then
      echo "- Create directory for prometheus bosh_exporter."
      sudo mkdir -p /var/vcap/store/bosh_exporter
    fi

    #--- Set metrics server certs for prometheus
    echo "- Set metrics server certs for prometheus."
    echo "((metrics_server_client_tls.ca))" > /var/vcap/data/scripting/metrics_server_ca.crt
    echo "((metrics_server_client_tls.certificate))" > /var/vcap/data/scripting/metrics_server_cert.crt
    echo "((metrics_server_client_tls.private_key))" > /var/vcap/data/scripting/metrics_server_key.crt

# docker container for openstack exporter
- type: replace
  path: /instance_groups/name=bosh/jobs/name=containers/properties/containers/-
  value:
    name: openstack_iaas_exporter
    image: quay.io/niedbalski/openstack-exporter-linux-amd64:((niedbalski/openstack-exporter-linux-amd64))
    bind_ports:
    - "9180:9180"
    volumes:
    - /var/vcap/data/scripting/clouds.yaml:/etc/openstack/clouds.yaml
    env_vars:
    - "https_proxy=http://system-internet-http-proxy.internal.paas:3128"
    command: "r3-openstack-cloud"

