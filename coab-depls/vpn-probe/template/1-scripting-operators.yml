#--- Add scripting release
- type: replace
  path: /releases/-
  value:
    name: generic-scripting
    version: latest

#--- Create files used in volume shared with container and clean obsolete images and volumes
- type: replace
  path: /instance_groups/name=vpn-probe/jobs/-
  value:
    name: scripting
    release: generic-scripting
    properties:
      scripting:
        pre-start-script: |
          #!/bin/bash
          #--- Fix jcr registry error access (502: service unavailable) when remains old container connectivity
          # printf "Clean docker network configuration.\n"
          # flag="$(grep "local-kv.db" /var/vcap/jobs/docker/bin/ctl)"
          # if [ "${flag}" = "" ] ; then
          #   sed -i '/ *create_network_bridge$/i rm -f /var/vcap/data/docker/docker/network/files/local-kv.db > /dev/null 2>&1' /var/vcap/jobs/docker/bin/ctl
          # fi

          #--- Set volume directory for vpn probe web-server
          WEB_SERVER_DIR="/var/vcap/data/tmp/vpn-probe"
          rm -fr ${WEB_SERVER_DIR} > /dev/null 2>&1 ; mkdir ${WEB_SERVER_DIR}

          #--- Set nginx configuration
          printf "Set nginx configuration.\n"
          cat > ${WEB_SERVER_DIR}/nginx.conf <<'EOF'
          ((nginx_conf))
          EOF
          cat > ${WEB_SERVER_DIR}/default.conf <<'EOF'
          ((default_conf))
          EOF

          #--- Set vpn probe check html page
          printf "Set nginx index.html file.\n"
          SITE_TYPE="((/secrets/site))"
          ENV_TYPE="((/secrets/site_type))"
          cat > ${WEB_SERVER_DIR}/index.html <<EOF
          Check ${ENV_TYPE} probe on ${SITE_TYPE}
          EOF

        post-deploy-script: |
          #!/bin/bash
          DOCKER_BIN="/var/vcap/packages/docker/bin/docker"
          DOCKER_OPTS="--host unix:///var/vcap/sys/run/docker/docker.sock"
          CHECK_DOCKER="$(pidof dockerd)"
          if [ -s ${DOCKER_BIN} ] && [ "${CHECK_DOCKER}" != "" ] ; then
            dockerContainers=$(${DOCKER_BIN} ${DOCKER_OPTS} ps -qa --filter "status=exited")
            if [ "${dockerContainers}" != "" ] ; then
              printf "Clean docker exited containers...\n"
              ${DOCKER_BIN} ${DOCKER_OPTS} rm ${dockerContainers}
            fi
            printf "Clean unused docker images older than 12 months...\n"
            ${DOCKER_BIN} ${DOCKER_OPTS} image prune -af --filter "until=8760h"
            printf "Clean unused docker volumes...\n"
            ${DOCKER_BIN} ${DOCKER_OPTS} volume ls -qf dangling=true | /usr/bin/xargs -r ${DOCKER_BIN} ${DOCKER_OPTS} volume rm
          else
            printf "Docker binary file \"${DOCKER_BIN}\" unknown.\n"
          fi