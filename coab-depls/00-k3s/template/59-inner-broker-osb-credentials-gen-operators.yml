
- type: replace
  path: /addons/name=10-add-servers/jobs/name=action/properties/actions/-
  value:
    type: kubectl
    name: "osb-credentials-gen-init-config"
    cmd: "apply"
    content:
      apiVersion: v1
      kind: ConfigMap
      metadata:
        name: osb-credentials-gen-init-config
        namespace: k3s-cluster-((instance_id))
        labels:
          app: osb-credentials-gen-init-config
      data:
        entrypoint.sh: |
          #!/usr/bin/env bash
          echo "save kubeconfig in credhub"
          
          set -x debug
          set -e #fail on errors
          
          KUBECONFIG=$(cat /kubeconfig.yml | jq -sR . )
          
          #generate json credentials json for binding. host and port are part of kubeconfig
          cat - > /credentials.json <<EOF
          {
            "kubeconfig":"$KUBECONFIG"
          }
          EOF
          kubectl create secret generic -n k3s-cluster-((instance_id)) k3s-service-credentials --from-file=credentials=/credentials.json --dry-run=client -o yaml | kubectl apply -f -
          echo "done generating osb credentials from kubeconfig"


- type: replace
  path: /addons/name=10-add-servers/jobs/name=action/properties/actions/-
  value:
    type: kubectl
    name: "osb-credentials-gen-init-daemonset"
    cmd: "apply"
    content:
      apiVersion: apps/v1
      kind: DaemonSet
      metadata:
        name: osb-credentials-gen-init-daemonset
        namespace: k3s-cluster-((instance_id))
        labels:
          app: osb-credentials-gen-init-daemonset
      spec:
        selector:
          matchLabels:
            app: osb-credentials-gen-init-daemonset
        updateStrategy:
          type: RollingUpdate
        template:
          metadata:
            labels:
              name: credentials-initializer
              app: osb-credentials-gen-init-daemonset
          spec:
            #set toleration so this can run on master even if noscdule set
            tolerations:
            - effect: NoExecute
              operator: Exists
            - effect: NoSchedule
              operator: Exists
              
            volumes:
            #mount kubeconfig from bosh k3s master host
            - name: kubeconfig
              hostPath:
                path: /var/vcap/store/k3s-server/kubeconfig.yml
                type: File

            #mount script from configmap
            - name: entrypoint
              configMap:
                name: osb-credentials-gen-init-config
                defaultMode: 0744
                

            #only master nodes have k3s generated kubeconfig
            nodeSelector:
              node-role.kubernetes.io/control-plane: "true"

            initContainers:
            - image: rancherlabs/swiss-army-knife:2
              name: credentials-initializer
              command: ["/scripts/entrypoint.sh"]
              volumeMounts:
              - name: entrypoint
                mountPath: /scripts
              - name: kubeconfig
                mountPath: /kubeconfig.yml
                readOnly: true
            #use non default service account so we can create / patch secrets
            serviceAccountName: k3s-cluster-((instance_id))
            containers:
            - image: "rancher/pause:3.1"
              name: pause
