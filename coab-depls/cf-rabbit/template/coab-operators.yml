- type: replace
  path: /releases/name=generic-scripting?
  value:
    name: generic-scripting
    version: latest

- type: replace
  path: /releases/name=minio?
  value:
    name: minio
    version: latest

- type: replace
  path: /instance_groups/name=shield/jobs/-
  value:
    name: scripting
    release: generic-scripting
    properties:
      scripting:
        pre-start-script: |
          echo "pre-start !!"

        post-start-script: |
          echo "post-start !!"

        post-stop-script: |
          echo "post-stop !!"

        post-deploy-script: |
          echo "post-deploy !!"

#add mc job operator
- type: replace
  path: /instance_groups/name=shield/jobs/-
  value:
    name: mc
    release: minio
    templates:
      - name: mc
    consumes:
      minio:
        instances:
          - address: fake.internal.paas
        properties:
          port: "1234"
          credential:
            accesskey: fake-s3
            secretkey: "fake*1234"
    properties:
      script: |
        #!/bin/sh

#define post-start script in order to create bucket
- type: replace
  path: /instance_groups/name=shield/jobs/name=scripting/properties/scripting/post-start-script
  value: |

    #--- Initialize context
    echo "- Start post-start"
    > /var/vcap/sys/log/scripting/post-start.stderr.log
    > /var/vcap/sys/log/scripting/post-start.stdout.log

    #--- Configure S3
    set +e

    export http_proxy=((http_proxy))
    export https_proxy=((http_proxy))
    export no_proxy=localhost,127.0.0.1,((shield-alias-prefix))((deployment_name))((shield-domain-suffix)),((shield-alias-prefix))((deployment_name))((shield-alias-suffix)) #no proxy to connect to shield server

    BUCKET=((s3_bucket_prefix))-mongodbcoab

    /var/vcap/packages/mc/mc config host add remote_s3 ((s3_host)) ((s3_access_key_id)) ((s3_secret_access_key)) --api s3v4
    if [ $? != 0 ] ; then echo "remote S3 target configuration failed\n" ; exit 0 ; fi

    /var/vcap/packages/mc/mc mb remote_s3/${BUCKET} --ignore-existing
    if [ $? != 0 ] ; then echo "bucket ${BUCKET} creation failed in remote s3\n" ; exit 0 ; fi

    unset http_proxy
    unset https_proxy
    unset no_proxy

#define post-start script in order to init and unlock
- type: replace
  path: /instance_groups/name=shield/jobs/name=scripting/properties/scripting/post-deploy-script
  value: |

    #--- Initialize context
    echo "- Start post-deploy"
    > /var/vcap/sys/log/scripting/post-deploy.stderr.log
    > /var/vcap/sys/log/scripting/post-deploy.stdout.log

    #-------------------------------------
    #--- Use shield cli in order to unlock
    #-------------------------------------
    echo "- Begin unlock"

    set +e
    /var/vcap/packages/shield/bin/shield api -k https://((shield-alias-prefix))((deployment_name))((shield-alias-suffix)) ((shield-core))
    /var/vcap/packages/shield/bin/shield --core ((shield-core)) login -u admin -p shield
    /var/vcap/packages/shield/bin/shield --core ((shield-core)) init --master shield
    /var/vcap/packages/shield/bin/shield --core ((shield-core)) unlock --master shield

    echo "- End unlock"

    #-------------------------------------
    #--- Clean useless jobs
    #-------------------------------------
    echo "- Begin cleaning useless jobs"

    #Database cleaning
    set +e #skip errors (database is locked)
    /var/vcap/packages/sqlite3/bin/sqlite3 /var/vcap/store/shield/shield.db <<END_SQL
    DELETE FROM jobs WHERE name LIKE '%configuration%';
    END_SQL

    echo "- End cleaning useless jobs"

