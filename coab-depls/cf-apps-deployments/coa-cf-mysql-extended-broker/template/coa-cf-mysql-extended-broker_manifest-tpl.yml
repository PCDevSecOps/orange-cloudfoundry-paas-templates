---
applications:
- name: coa-cf-mysql-extended-broker
  memory: 2GB
  disk_quota: 1536M
  stack: cflinuxfs3
  host: coa-cf-mysql-extended-broker
  domain: (( grab secrets.cloudfoundry.system_domain ))
  instances: 1
  path: cf-ops-automation-bosh-broker.jar
  timeout: 180
  buildpack: cached-java-buildpack
  env:
     # url to gitlab paas-secret
     git.paas-secret.url: (( grab secrets.coa-cf-mysql-extended-broker.git.paas-secret.url ))
     # user that pushes commits in paas-secret
     git.paas-secret.user: (( grab secrets.coa-cf-mysql-extended-broker.git.paas-secret.user ))
     # password of the git user that push commits in paas-secret
     git.paas-secret.password: (( grab secrets.coa-cf-mysql-extended-broker.git.paas-secret.password ))
     # commit name of the git user that push commits in paas-secret
     git.paas-secret.committerName: (( grab secrets.coa-cf-mysql-extended-broker.git.paas-secret.committerName ))
     # commit name of the git user that push commits in paas-secret
     git.paas-secret.committerEmail: (( grab secrets.coa-cf-mysql-extended-broker.git.paas-secret.committerEmail ))

     # url to gitlab paas-template
     git.paas-template.url: (( grab secrets.coa-cf-mysql-extended-broker.git.paas-template.url ))
     # user that pushes commits in paas-template
     git.paas-template.user: (( grab secrets.coa-cf-mysql-extended-broker.git.paas-template.user ))
     # password of the git user that push commits in paas-template
     git.paas-template.password: (( grab secrets.coa-cf-mysql-extended-broker.git.paas-template.password ))
     # commit name of the git user that push commits in paas-template
     git.paas-template.committerName: (( grab secrets.coa-cf-mysql-extended-broker.git.paas-template.committerName ))
     # commit email of the git user that push commits in paas-template
     git.paas-template.committerEmail: (( grab secrets.coa-cf-mysql-extended-broker.git.paas-template.committerEmail ))

     # createBranchIfMissing : target branch
     git.paas-template.createBranchIfMissing: (( grab secrets.coa-cf-mysql-extended-broker.git.paas-template.createBranchIfMissing ))
     # checkOutRemoteBranch : source branch
     git.paas-template.checkOutRemoteBranch: (( grab secrets.coa-cf-mysql-extended-broker.git.paas-template.checkOutRemoteBranch ))

     # broker basic auth user
     spring.security.user.name: (( grab secrets.coa-cf-mysql-extended-broker.name ))
     # broker basic auth password
     spring.security.user.password: "(( grab secrets.cloudfoundry.service_brokers.coa-cf-mysql-extended-broker.password ))"

     pipeline.maxExecutionDurationSeconds: (( grab secrets.coa-cf-mysql-extended-broker.pipeline.maxExecutionDurationSeconds ))

     pipeline.osbDelegateUser: (( grab secrets.coa-cf-mysql-extended-broker.pipeline.osbDelegateUser ))
     pipeline.osbDelegatePassword: (( grab secrets.coa-cf-mysql-extended-broker.pipeline.osbDelegatePassword ))
     pipeline.brokerUrlPattern: (( concat "https://d-mysql-t_{0}." secrets.cloudfoundry.system_domain ))
     # Ease undelete requests
     pipeline.skipDeProvision: "true"

     logging.level.org.springframework.cloud.servicebroker: debug
     # Display COA generated bosh manifest file presence. Useful to detect mismatch between COAB and COA template
     logging.level.com.orange.oss.cloudfoundry.broker.opsautomation.ondemandbroker.pipeline.PipelineCompletionTracker: debug

     logging.level.org.springframework.web.filter.CommonsRequestLoggingFilter: debug

     # Prefix used in deployment names. Useful to distinguish different deployment types (e.g. c for cassandra and m for mongo and t for cf-mysql-extended)
     deployment.model-deployment-short-alias: "t"
     # used in git commit to identity the broker
     deployment.broker-display-name: cf-mysql-extended
     # relative path to the paas-template deployment model (ie. bosh manifest files)
     deployment.model-deployment: 01-cf-mysql-extended

     # When set to true, then service instance operations (create/update/delete) are rejected,
     # while service binding operations (create/delete) are still accepted.
     # This enables to perform maintenance on the underlying COA/git branches infrastructure while not risking
     # corrupted COA inventory and not imposing full control plan downtime to coab users.
     # See spruce syntax for default value at https://github.com/geofffranks/spruce/blob/master/doc/environment-variables-and-defaults.md
     deployment.serviceInstanceReadOnlyMode: (( grab secrets.coa-cf-mysql-extended-broker.deployment.serviceInstanceReadOnlyMode || false ))

     # User facing message to display when a service instance operation is requested while serviceInstanceReadOnlyMode is set to true
     # Useful to tell users about ETA for end of maintenance window.
     # when no value is specified (null in yaml), a default COAB message is used instead.
     deployment.serviceInstanceReadOnlyMessage: (( grab secrets.coa-cf-mysql-extended-broker.deployment.serviceInstanceReadOnlyMessage || null ))

    # Renders a dashboard url to the url of the dedicated grafana instance.
    # This is using the template using the following parameters
    # {0}: service instance guid
    # {1}: osb-cmdb brokered service instance guid passed as params.x-osb-cmdb.labels.brokered_service_instance_guid or "null" if missing
    # Explanations of grafana URL params:
    # - Selecting 2 days of data so that graphes are not empty by default
    # - autofresh every 15 mins as to not generate unnecessary traffic by default to our servers
     deployment.dashboard-url-template: (( concat "https://grafana-{1}." secrets.cloudfoundry.system_domain "/d/mysql_overview/mysql-overview?orgId=1&refresh=5m&from=now-2d&to=now" ))

     # Override the default catalog
     CATALOG_YML: (( file "../../../../generated-files/broker-catalog-config.yml" ))

